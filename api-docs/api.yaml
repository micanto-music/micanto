openapi: 3.0.3
info:
  title: Micanto Api
  version: 1.0.0
  description: 'The API for [Micanto](https://micanto.js.org)'
  contact:
    name: Andr√© Rinas
    url: 'https://www.andrerinas.de/'
    email: info@andrerinas.de
  license:
    name: MIT
    url: 'https://github.com/micanto-music/micanto/blob/main/LICENSE.md'
servers:
  - url: 'https://micanto.test'
    description: Local
paths:
  /api/login:
    post:
      summary: 'Login user'
      description: 'Login a user. Will return a token for future requests.'
      tags:
        - authentication
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
              required:
                - email
                - password
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                required:
                  - token
  /api/user:
    get:
      summary: Get a current loggedin user
      tags:
        - user
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
#      security:
#        - Bearer Token: [ ]
  /api/profile/{userId}:
    parameters:
      - schema:
          type: integer
        name: userId
        in: path
        required: true
        description: ID of the user
    post:
      summary: Update a user
      description: Update a user via user id
#      security:
#        - Bearer Token: [ ]
      tags:
        - user
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

tags:
  - name: authentication
  - name: user

components:
  schemas:
    User:
      title: User
      type: object
      description: A User model
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
        is_admin:
          type: boolean
  securitySchemes:
    Bearer Token:
      type: http
      scheme: bearer
